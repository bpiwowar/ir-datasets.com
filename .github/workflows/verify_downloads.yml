name: Downloadable Content

on:
  schedule:
    - cron: '0 8 * * 1' # run every monday at (around) 8:00am UTC
  workflow_dispatch:
    inputs:
      dataset:
        description: "Top-level dataset ID to run (or leave blank for all)" 
        required: false
        default: ''

jobs:

  create_branch:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git checkout -b verify-downloads-${{github.run_number}} --track
    - run: 'echo ${{github.run_number}} > docs/dlc/_placeholder.txt'
    - uses: EndBug/add-and-commit@v8
      with:
        message: 'touch'
        add: 'docs/dlc/_placeholder.txt'

  cranfield:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'cranfield'"
    needs: &needs [create_branch]
    runs-on: &runson ubuntu-latest
    steps:
    - &step1 uses: actions/checkout@v2
      with:
        repository: allenai/ir_datasets
        path: ir-datasets
    - &step2 uses: actions/checkout@v2
      with:
        path: ir-datasets.com
        ref: verify-downloads-${{github.run_number}}
    - &step3 uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - &step4 name: Install dependencies
      run: |
        cd ir-datasets
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        cd ir-datasets
        python -m test.downloads --filter "^cranfield/" --output "../ir-datasets.com/docs/dlc/cranfield.json"
        cd ../ir-datasets.com/
        git pull --rebase --autostash
    - &step6 uses: EndBug/add-and-commit@v8
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      with:
        message: 'from verify_downloads'
        add: 'docs/dlc/*.json'
        cwd: './ir-datasets.com/'
        pull: '--rebase --autostash'

  vaswani:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'vaswani'"
    needs: *needs
    runs-on: ubuntu-latest
    steps:
    - *step1
    - *step2
    - *step3
    - *step4
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        cd ir-datasets
        python -m test.downloads --filter "^vaswani/" --output "../ir-datasets.com/docs/dlc/vaswani.json"
        cd ../ir-datasets.com/
        git pull --rebase --autostash
    - *step6

  merge_dlc:
    if: ${{ always() }}
    needs: [cranfield, vaswani]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: verify-downloads-${{github.run_number}}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - run: python merge_dlc.py
    - uses: EndBug/add-and-commit@v8
      with:
        message: 'from verify_downloads'
        add: 'docs/dlc/*.json'
    - run: |
        git checkout master
        git merge -s recursive -Xtheirs --squash verify-downloads-${{github.run_number}} --allow-unrelated-histories
        git commit -m verify-downloads-${{github.run_number}}
        git push origin master
        git push origin --delete verify-downloads-${{github.run_number}}
